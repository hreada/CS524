<T>
  <actors>
    <actor>
      <k> let ( bind ( rtree , right ( tree ( pr ( pr ( pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) , pr ( pr ( 5 , 6 ) , 7 ) ) , _51 ) ) ) ) , letactor ( bind ( newcust , app ( app ( app ( lambda ( _14 , lambda ( nargs , lambda ( _15 , lambda ( _16 , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( lambda ( _17 , app ( app ( lambda ( _3 , app ( lambda ( _18 , lambda ( _19 , lambda ( nargs , lambda ( _20 , lambda ( _21 , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( _18 , _19 ) , 1 ) , _21 ) ) , seq ( become ( lambda ( _22 , become ( lambda ( _23 , app ( app ( lambda ( _1 , app ( lambda ( _24 , lambda ( _25 , become ( _24 ) ) ) , lambda ( _26 , app ( app ( _1 , _1 ) , _26 ) ) ) ) , lambda ( _1 , app ( lambda ( _27 , lambda ( _28 , become ( _27 ) ) ) , lambda ( _29 , app ( app ( _1 , _1 ) , _29 ) ) ) ) ) , _23 ) ) ) ) ) , send ( _19 , mult ( _20 , _21 ) ) ) ) ) ) ) ) ) , lambda ( _30 , app ( app ( _3 , _3 ) , _30 ) ) ) ) , lambda ( _3 , app ( lambda ( _31 , lambda ( _32 , lambda ( nargs , lambda ( _33 , lambda ( _34 , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( _31 , _32 ) , 1 ) , _34 ) ) , seq ( become ( lambda ( _35 , become ( lambda ( _36 , app ( app ( lambda ( _1 , app ( lambda ( _37 , lambda ( _38 , become ( _37 ) ) ) , lambda ( _39 , app ( app ( _1 , _1 ) , _39 ) ) ) ) , lambda ( _1 , app ( lambda ( _40 , lambda ( _41 , become ( _40 ) ) ) , lambda ( _42 , app ( app ( _1 , _1 ) , _42 ) ) ) ) ) , _36 ) ) ) ) ) , send ( _32 , mult ( _33 , _34 ) ) ) ) ) ) ) ) ) , lambda ( _43 , app ( app ( _3 , _3 ) , _43 ) ) ) ) ) , _17 ) ) , _14 ) , 1 ) , _16 ) ) , seq ( become ( lambda ( _44 , become ( lambda ( _5 , app ( app ( lambda ( _1 , app ( lambda ( _45 , lambda ( _46 , become ( _45 ) ) ) , lambda ( _6 , app ( app ( _1 , _1 ) , _6 ) ) ) ) , lambda ( _1 , app ( lambda ( _47 , lambda ( _48 , become ( _47 ) ) ) , lambda ( _7 , app ( app ( _1 , _1 ) , _7 ) ) ) ) ) , _5 ) ) ) ) ) , send ( _14 , mult ( _15 , _16 ) ) ) ) ) ) ) ) , cust ( pr ( pr ( pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) , pr ( pr ( 5 , 6 ) , 7 ) ) , _51 ) ) ) , 0 ) , nil ) ) , .Bindings , if ( or ( isnat ( pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) ) , isnat ( rtree ) ) , send ( cust ( pr ( pr ( pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) , pr ( pr ( 5 , 6 ) , 7 ) ) , _51 ) ) , mult ( app ( app ( lambda ( _11 , app ( app ( lambda ( _10 , app ( lambda ( b , lambda ( self , lambda ( m , seq ( become ( app ( b , self ) ) , if ( isnat ( tree ( m ) ) , send ( cust ( m ) , tree ( m ) ) , let ( bind ( pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) , left ( tree ( m ) ) ) , let ( bind ( rtree , right ( tree ( m ) ) ) , letactor ( bind ( newcust , app ( app ( app ( lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( lambda ( _4 , app ( app ( lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) , lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) ) , _4 ) ) , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _5 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _6 , app ( app ( _1 , _1 ) , _6 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _7 , app ( app ( _1 , _1 ) , _7 ) ) ) ) ) , _5 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) , cust ( m ) ) , 0 ) , nil ) ) , .Bindings , if ( or ( isnat ( pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) ) , isnat ( rtree ) ) , send ( cust ( m ) , mult ( app ( app ( b , self ) , pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) ) , app ( app ( b , self ) , rtree ) ) ) , seq ( send ( self , pr ( left ( tree ( m ) ) , newcust ) ) , send ( self , pr ( right ( tree ( m ) ) , newcust ) ) ) ) ) ) ) ) ) ) ) ) , lambda ( _11 , app ( app ( _10 , _10 ) , _11 ) ) ) ) , lambda ( _10 , app ( lambda ( b , lambda ( self , lambda ( m , seq ( become ( app ( b , self ) ) , if ( isnat ( tree ( m ) ) , send ( cust ( m ) , tree ( m ) ) , let ( bind ( pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) , left ( tree ( m ) ) ) , let ( bind ( rtree , right ( tree ( m ) ) ) , letactor ( bind ( newcust , app ( app ( app ( lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( lambda ( _4 , app ( app ( lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) , lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) ) , _4 ) ) , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _5 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _6 , app ( app ( _1 , _1 ) , _6 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _7 , app ( app ( _1 , _1 ) , _7 ) ) ) ) ) , _5 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) , cust ( m ) ) , 0 ) , nil ) ) , .Bindings , if ( or ( isnat ( pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) ) , isnat ( rtree ) ) , send ( cust ( m ) , mult ( app ( app ( b , self ) , pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) ) , app ( app ( b , self ) , rtree ) ) ) , seq ( send ( self , pr ( left ( tree ( m ) ) , newcust ) ) , send ( self , pr ( right ( tree ( m ) ) , newcust ) ) ) ) ) ) ) ) ) ) ) ) , lambda ( _11 , app ( app ( _10 , _10 ) , _11 ) ) ) ) ) , _11 ) ) , _50 ) , pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) ) , app ( app ( lambda ( _11 , app ( app ( lambda ( _10 , app ( lambda ( b , lambda ( self , lambda ( m , seq ( become ( app ( b , self ) ) , if ( isnat ( tree ( m ) ) , send ( cust ( m ) , tree ( m ) ) , let ( bind ( pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) , left ( tree ( m ) ) ) , let ( bind ( rtree , right ( tree ( m ) ) ) , letactor ( bind ( newcust , app ( app ( app ( lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( lambda ( _4 , app ( app ( lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) , lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) ) , _4 ) ) , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _5 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _6 , app ( app ( _1 , _1 ) , _6 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _7 , app ( app ( _1 , _1 ) , _7 ) ) ) ) ) , _5 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) , cust ( m ) ) , 0 ) , nil ) ) , .Bindings , if ( or ( isnat ( pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) ) , isnat ( rtree ) ) , send ( cust ( m ) , mult ( app ( app ( b , self ) , pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) ) , app ( app ( b , self ) , rtree ) ) ) , seq ( send ( self , pr ( left ( tree ( m ) ) , newcust ) ) , send ( self , pr ( right ( tree ( m ) ) , newcust ) ) ) ) ) ) ) ) ) ) ) ) , lambda ( _11 , app ( app ( _10 , _10 ) , _11 ) ) ) ) , lambda ( _10 , app ( lambda ( b , lambda ( self , lambda ( m , seq ( become ( app ( b , self ) ) , if ( isnat ( tree ( m ) ) , send ( cust ( m ) , tree ( m ) ) , let ( bind ( pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) , left ( tree ( m ) ) ) , let ( bind ( rtree , right ( tree ( m ) ) ) , letactor ( bind ( newcust , app ( app ( app ( lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( lambda ( _4 , app ( app ( lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) , lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) ) , _4 ) ) , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _5 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _6 , app ( app ( _1 , _1 ) , _6 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _7 , app ( app ( _1 , _1 ) , _7 ) ) ) ) ) , _5 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) , cust ( m ) ) , 0 ) , nil ) ) , .Bindings , if ( or ( isnat ( pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) ) , isnat ( rtree ) ) , send ( cust ( m ) , mult ( app ( app ( b , self ) , pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) ) , app ( app ( b , self ) , rtree ) ) ) , seq ( send ( self , pr ( left ( tree ( m ) ) , newcust ) ) , send ( self , pr ( right ( tree ( m ) ) , newcust ) ) ) ) ) ) ) ) ) ) ) ) , lambda ( _11 , app ( app ( _10 , _10 ) , _11 ) ) ) ) ) , _11 ) ) , _50 ) , rtree ) ) ) , seq ( send ( _50 , pr ( left ( tree ( pr ( pr ( pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) , pr ( pr ( 5 , 6 ) , 7 ) ) , _51 ) ) ) , newcust ) ) , send ( _50 , pr ( right ( tree ( pr ( pr ( pr ( 1 , pr ( 2 , pr ( 3 , 4 ) ) ) , pr ( pr ( 5 , 6 ) , 7 ) ) , _51 ) ) ) , newcust ) ) ) ) ) ) ~&gt; #freezerapp(_,_)0 ( lambda ( _62 , _62 ) ) ~&gt; #freezerexec(_)0 ( ) </k>
      <id> _109 </id>
    </actor>
    <actor>
      <k> ready ( lambda ( _67 , seq ( become ( app ( lambda ( _11 , app ( app ( lambda ( _10 , app ( lambda ( b , lambda ( self , lambda ( m , seq ( become ( app ( b , self ) ) , if ( isnat ( tree ( m ) ) , send ( cust ( m ) , tree ( m ) ) , let ( bind ( ltree , left ( tree ( m ) ) ) , let ( bind ( rtree , right ( tree ( m ) ) ) , letactor ( bind ( newcust , app ( app ( app ( lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( lambda ( _4 , app ( app ( lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) , lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) ) , _4 ) ) , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _5 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _6 , app ( app ( _1 , _1 ) , _6 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _7 , app ( app ( _1 , _1 ) , _7 ) ) ) ) ) , _5 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) , cust ( m ) ) , 0 ) , nil ) ) , .Bindings , if ( or ( isnat ( ltree ) , isnat ( rtree ) ) , send ( cust ( m ) , mult ( app ( app ( b , self ) , ltree ) , app ( app ( b , self ) , rtree ) ) ) , seq ( send ( self , pr ( left ( tree ( m ) ) , newcust ) ) , send ( self , pr ( right ( tree ( m ) ) , newcust ) ) ) ) ) ) ) ) ) ) ) ) , lambda ( _11 , app ( app ( _10 , _10 ) , _11 ) ) ) ) , lambda ( _10 , app ( lambda ( b , lambda ( self , lambda ( m , seq ( become ( app ( b , self ) ) , if ( isnat ( tree ( m ) ) , send ( cust ( m ) , tree ( m ) ) , let ( bind ( ltree , left ( tree ( m ) ) ) , let ( bind ( rtree , right ( tree ( m ) ) ) , letactor ( bind ( newcust , app ( app ( app ( lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( lambda ( _4 , app ( app ( lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) , lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) ) , _4 ) ) , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _5 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _6 , app ( app ( _1 , _1 ) , _6 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _7 , app ( app ( _1 , _1 ) , _7 ) ) ) ) ) , _5 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) , cust ( m ) ) , 0 ) , nil ) ) , .Bindings , if ( or ( isnat ( ltree ) , isnat ( rtree ) ) , send ( cust ( m ) , mult ( app ( app ( b , self ) , ltree ) , app ( app ( b , self ) , rtree ) ) ) , seq ( send ( self , pr ( left ( tree ( m ) ) , newcust ) ) , send ( self , pr ( right ( tree ( m ) ) , newcust ) ) ) ) ) ) ) ) ) ) ) ) , lambda ( _11 , app ( app ( _10 , _10 ) , _11 ) ) ) ) ) , _11 ) ) , _50 ) ) , if ( isnat ( tree ( _67 ) ) , send ( cust ( _67 ) , tree ( _67 ) ) , let ( bind ( ltree , left ( tree ( _67 ) ) ) , let ( bind ( rtree , right ( tree ( _67 ) ) ) , letactor ( bind ( newcust , app ( app ( app ( lambda ( _68 , lambda ( nargs , lambda ( _69 , lambda ( _70 , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( lambda ( _71 , app ( app ( lambda ( _3 , app ( lambda ( _72 , lambda ( _73 , lambda ( nargs , lambda ( _74 , lambda ( _75 , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( _72 , _73 ) , 1 ) , _75 ) ) , seq ( become ( lambda ( _76 , become ( lambda ( _77 , app ( app ( lambda ( _1 , app ( lambda ( _78 , lambda ( _79 , become ( _78 ) ) ) , lambda ( _80 , app ( app ( _1 , _1 ) , _80 ) ) ) ) , lambda ( _1 , app ( lambda ( _81 , lambda ( _82 , become ( _81 ) ) ) , lambda ( _83 , app ( app ( _1 , _1 ) , _83 ) ) ) ) ) , _77 ) ) ) ) ) , send ( _73 , mult ( _74 , _75 ) ) ) ) ) ) ) ) ) , lambda ( _84 , app ( app ( _3 , _3 ) , _84 ) ) ) ) , lambda ( _3 , app ( lambda ( _85 , lambda ( _86 , lambda ( nargs , lambda ( _87 , lambda ( _88 , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( _85 , _86 ) , 1 ) , _88 ) ) , seq ( become ( lambda ( _89 , become ( lambda ( _90 , app ( app ( lambda ( _1 , app ( lambda ( _91 , lambda ( _92 , become ( _91 ) ) ) , lambda ( _93 , app ( app ( _1 , _1 ) , _93 ) ) ) ) , lambda ( _1 , app ( lambda ( _94 , lambda ( _95 , become ( _94 ) ) ) , lambda ( _96 , app ( app ( _1 , _1 ) , _96 ) ) ) ) ) , _90 ) ) ) ) ) , send ( _86 , mult ( _87 , _88 ) ) ) ) ) ) ) ) ) , lambda ( _97 , app ( app ( _3 , _3 ) , _97 ) ) ) ) ) , _71 ) ) , _68 ) , 1 ) , _70 ) ) , seq ( become ( lambda ( _98 , become ( lambda ( _5 , app ( app ( lambda ( _1 , app ( lambda ( _99 , lambda ( _100 , become ( _99 ) ) ) , lambda ( _6 , app ( app ( _1 , _1 ) , _6 ) ) ) ) , lambda ( _1 , app ( lambda ( _101 , lambda ( _102 , become ( _101 ) ) ) , lambda ( _7 , app ( app ( _1 , _1 ) , _7 ) ) ) ) ) , _5 ) ) ) ) ) , send ( _68 , mult ( _69 , _70 ) ) ) ) ) ) ) ) , cust ( _67 ) ) , 0 ) , nil ) ) , .Bindings , if ( or ( isnat ( ltree ) , isnat ( rtree ) ) , send ( cust ( _67 ) , mult ( app ( app ( lambda ( _11 , app ( app ( lambda ( _10 , app ( lambda ( b , lambda ( self , lambda ( m , seq ( become ( app ( b , self ) ) , if ( isnat ( tree ( m ) ) , send ( cust ( m ) , tree ( m ) ) , let ( bind ( ltree , left ( tree ( m ) ) ) , let ( bind ( rtree , right ( tree ( m ) ) ) , letactor ( bind ( newcust , app ( app ( app ( lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( lambda ( _4 , app ( app ( lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) , lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) ) , _4 ) ) , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _5 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _6 , app ( app ( _1 , _1 ) , _6 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _7 , app ( app ( _1 , _1 ) , _7 ) ) ) ) ) , _5 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) , cust ( m ) ) , 0 ) , nil ) ) , .Bindings , if ( or ( isnat ( ltree ) , isnat ( rtree ) ) , send ( cust ( m ) , mult ( app ( app ( b , self ) , ltree ) , app ( app ( b , self ) , rtree ) ) ) , seq ( send ( self , pr ( left ( tree ( m ) ) , newcust ) ) , send ( self , pr ( right ( tree ( m ) ) , newcust ) ) ) ) ) ) ) ) ) ) ) ) , lambda ( _11 , app ( app ( _10 , _10 ) , _11 ) ) ) ) , lambda ( _10 , app ( lambda ( b , lambda ( self , lambda ( m , seq ( become ( app ( b , self ) ) , if ( isnat ( tree ( m ) ) , send ( cust ( m ) , tree ( m ) ) , let ( bind ( ltree , left ( tree ( m ) ) ) , let ( bind ( rtree , right ( tree ( m ) ) ) , letactor ( bind ( newcust , app ( app ( app ( lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( lambda ( _4 , app ( app ( lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) , lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) ) , _4 ) ) , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _5 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _6 , app ( app ( _1 , _1 ) , _6 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _7 , app ( app ( _1 , _1 ) , _7 ) ) ) ) ) , _5 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) , cust ( m ) ) , 0 ) , nil ) ) , .Bindings , if ( or ( isnat ( ltree ) , isnat ( rtree ) ) , send ( cust ( m ) , mult ( app ( app ( b , self ) , ltree ) , app ( app ( b , self ) , rtree ) ) ) , seq ( send ( self , pr ( left ( tree ( m ) ) , newcust ) ) , send ( self , pr ( right ( tree ( m ) ) , newcust ) ) ) ) ) ) ) ) ) ) ) ) , lambda ( _11 , app ( app ( _10 , _10 ) , _11 ) ) ) ) ) , _11 ) ) , _50 ) , ltree ) , app ( app ( lambda ( _11 , app ( app ( lambda ( _10 , app ( lambda ( b , lambda ( self , lambda ( m , seq ( become ( app ( b , self ) ) , if ( isnat ( tree ( m ) ) , send ( cust ( m ) , tree ( m ) ) , let ( bind ( ltree , left ( tree ( m ) ) ) , let ( bind ( rtree , right ( tree ( m ) ) ) , letactor ( bind ( newcust , app ( app ( app ( lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( lambda ( _4 , app ( app ( lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) , lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) ) , _4 ) ) , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _5 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _6 , app ( app ( _1 , _1 ) , _6 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _7 , app ( app ( _1 , _1 ) , _7 ) ) ) ) ) , _5 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) , cust ( m ) ) , 0 ) , nil ) ) , .Bindings , if ( or ( isnat ( ltree ) , isnat ( rtree ) ) , send ( cust ( m ) , mult ( app ( app ( b , self ) , ltree ) , app ( app ( b , self ) , rtree ) ) ) , seq ( send ( self , pr ( left ( tree ( m ) ) , newcust ) ) , send ( self , pr ( right ( tree ( m ) ) , newcust ) ) ) ) ) ) ) ) ) ) ) ) , lambda ( _11 , app ( app ( _10 , _10 ) , _11 ) ) ) ) , lambda ( _10 , app ( lambda ( b , lambda ( self , lambda ( m , seq ( become ( app ( b , self ) ) , if ( isnat ( tree ( m ) ) , send ( cust ( m ) , tree ( m ) ) , let ( bind ( ltree , left ( tree ( m ) ) ) , let ( bind ( rtree , right ( tree ( m ) ) ) , letactor ( bind ( newcust , app ( app ( app ( lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( lambda ( _4 , app ( app ( lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) , lambda ( _3 , app ( lambda ( b , lambda ( c , lambda ( nargs , lambda ( firstnum , lambda ( num , if ( eq? ( nargs , 0 ) , become ( app ( app ( app ( b , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _2 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _2 , app ( app ( _1 , _1 ) , _2 ) ) ) ) ) , _2 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) ) , lambda ( _4 , app ( app ( _3 , _3 ) , _4 ) ) ) ) ) , _4 ) ) , c ) , 1 ) , num ) ) , seq ( become ( lambda ( m , become ( lambda ( _5 , app ( app ( lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _6 , app ( app ( _1 , _1 ) , _6 ) ) ) ) , lambda ( _1 , app ( lambda ( b , lambda ( m , become ( b ) ) ) , lambda ( _7 , app ( app ( _1 , _1 ) , _7 ) ) ) ) ) , _5 ) ) ) ) ) , send ( c , mult ( firstnum , num ) ) ) ) ) ) ) ) , cust ( m ) ) , 0 ) , nil ) ) , .Bindings , if ( or ( isnat ( ltree ) , isnat ( rtree ) ) , send ( cust ( m ) , mult ( app ( app ( b , self ) , ltree ) , app ( app ( b , self ) , rtree ) ) ) , seq ( send ( self , pr ( left ( tree ( m ) ) , newcust ) ) , send ( self , pr ( right ( tree ( m ) ) , newcust ) ) ) ) ) ) ) ) ) ) ) ) , lambda ( _11 , app ( app ( _10 , _10 ) , _11 ) ) ) ) ) , _11 ) ) , _50 ) , rtree ) ) ) , seq ( send ( _50 , pr ( left ( tree ( _67 ) ) , newcust ) ) , send ( _50 , pr ( right ( tree ( _67 ) ) , newcust ) ) ) ) ) ) ) ) ) ) ) </k>
      <id> _50 </id>
    </actor>
    <actor>
      <k> exec ( nil ) </k>
      <id> initactor </id>
    </actor>
    <actor>
      <k> ready ( lambda ( _49 , _49 ) ) </k>
      <id> _51 </id>
    </actor>
  </actors>
  <messages> .MessageCellBag </messages>
  <definedaddr> ListItem ( initactor ) ListItem ( _50 ) ListItem ( _51 ) ListItem ( _109 ) </definedaddr>
</T>
